# project: cj541g35wjwqc01754kb4rfvk
# version: 85

type Challenge implements Node {
  author: User! @relation(name: "AuthorForChallenge")
  body: String
  comments: [Comment!]! @relation(name: "CommentOnChallenge")
  createdAt: DateTime!
  description: String
  id: ID! @isUnique
  title: String
  updatedAt: DateTime!
  upvotes: [User!]! @relation(name: "ChallengeUpvotes")
}

type Comment implements Node {
  challenge: Challenge @relation(name: "CommentOnChallenge")
  childComments: [Comment!]! @relation(name: "SubComments")
  createdAt: DateTime!
  id: ID! @isUnique
  parentComment: Comment @relation(name: "SubComments")
  text: String! @defaultValue(value: "")
  updatedAt: DateTime!
  user: User! @relation(name: "CommentAuthor")
  discussion: Discussion @relation(name: "CommentsOnDiscussion")
}

type CommunityAggregate implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  scoreTotal: Int
  updatedAt: DateTime!
}

type Discussion implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  topic: String!
  updatedAt: DateTime!
  task: Task @relation(name: "DiscussionTask")
  comments: [Comment!]! @relation(name: "CommentsOnDiscussion")
}

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Score implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  scorecard: Scorecard! @relation(name: "ScoreOnScorecard")
  updatedAt: DateTime!
  value: Int!
}

type Scorecard implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  scores: [Score!]! @relation(name: "ScoreOnScorecard")
  total: Int
  updatedAt: DateTime!
  user: User @relation(name: "ScorecardForUser")
}

type User implements Node {
  auth0UserId: String @isUnique
  challenges: [Challenge!]! @relation(name: "AuthorForChallenge")
  comments: [Comment!]! @relation(name: "CommentAuthor")
  createdAt: DateTime!
  email: String
  familyName: String
  givenName: String
  id: ID! @isUnique
  name: String
  picture: String
  pictureLarge: String
  scorecard: Scorecard! @relation(name: "ScorecardForUser")
  updatedAt: DateTime!
  upvotedChallenges: [Challenge!]! @relation(name: "ChallengeUpvotes")
}

type Task implements Node {
  createdAt: DateTime!
  discussion: Discussion @relation(name: "DiscussionTask")
  id: ID! @isUnique
  type: TaskName!
  updatedAt: DateTime!
}

enum TaskName {
  Discussion
  Brainstorm
}